plugins {
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-spring-boot-application' version '6.0.0'
}


import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer

group = 'com.tstu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'com.hazelcast:hazelcast-client'
	implementation 'org.liquibase:liquibase-core'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
	implementation 'org.mapstruct:mapstruct:1.3.1.Final'

	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'


	implementation 'io.springfox:springfox-swagger2:2.7.0'
	implementation 'io.springfox:springfox-swagger-ui:2.7.0'

	compile files('libs/commons-0.6.1-SNAPSHOT.jar')
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:8-alpine'
		jvmArgs = ['-Dspring.profiles.active=docker', '-Xmx512m']
		ports = [8083]
	}
}

task createContainer(type: DockerCreateContainer, group: 'docker') {
	dependsOn dockerBuildImage
	targetImageId dockerBuildImage.getImageId()
	hostConfig.portBindings = ["8083:8083"]
}

task startContainer(type: DockerStartContainer, group: 'docker') {
	dependsOn createContainer
	targetContainerId createContainer.getContainerId()
}
